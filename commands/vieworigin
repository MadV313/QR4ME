import discord
from discord.ext import commands
from discord import app_commands
import json
import os

ORIGINS_FILE = "data/origins.json"

def load_origins():
    if not os.path.exists(ORIGINS_FILE):
        return {}
    with open(ORIGINS_FILE, "r") as f:
        return json.load(f)

class ViewOrigin(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="vieworigin", description="Check the current origin position used for QR placement")
    async def vieworigin(self, interaction: discord.Interaction):
        guild_id = str(interaction.guild.id)
        try:
            data = load_origins()
            origin = data.get(guild_id)

            if not origin:
                await interaction.response.send_message(
                    "‚ÑπÔ∏è No origin has been set for this server yet. Use `/setorigin` first.",
                    ephemeral=True
                )
                return

            x = origin.get("x", "N/A")
            y = origin.get("y", "N/A")
            z = origin.get("z", "N/A")

            await interaction.response.send_message(
                f"üìç **Current Origin for This Server:**\n"
                f"> `X`: {x}\n> `Y`: {y}\n> `Z`: {z}",
                ephemeral=True
            )
        except Exception as e:
            await interaction.response.send_message(f"‚ùå Failed to load origin: {e}", ephemeral=True)

async def setup(bot):
    await bot.add_cog(ViewOrigin(bot))
